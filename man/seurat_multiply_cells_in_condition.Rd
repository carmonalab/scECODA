% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.r
\name{seurat_multiply_cells_in_condition}
\alias{seurat_multiply_cells_in_condition}
\title{Over-sample (Multiply/Duplicate) specific cells in a Seurat object.}
\usage{
seurat_multiply_cells_in_condition(
  seurat_object,
  condition_column,
  target_condition,
  celltype_column,
  target_celltypes,
  multiplier
)
}
\arguments{
\item{seurat_object}{The Seurat object to modify.}

\item{condition_column}{A character string specifying the name of the
metadata column that contains the primary condition (e.g., \code{"group"},
\code{"treatment"}).}

\item{target_condition}{A character string specifying the exact value within
\code{condition_column} that identifies the cells to be targeted for
duplication (e.g., \code{"disease"}, \code{"treated"}).}

\item{celltype_column}{A character string specifying the name of the
metadata column that contains the cell type annotation (e.g.,
\code{"seurat_clusters"}, \code{"cell_type_l2"}).}

\item{target_celltypes}{A character vector of specific cell type annotations
within \code{celltype_column} to be targeted (e.g., \code{c("CD8 T", "NK")}).}

\item{multiplier}{An integer specifying the factor by which to multiply
(duplicate) the selected cells. A value of \code{2} results in one copy
being added (doubling the count), a value of \code{3} results in two
copies, and so on. Must be \code{1} or greater. If \code{1}, the original
object is returned.}
}
\value{
A new \code{Seurat} object containing the original cells plus
(\code{multiplier} - 1) copies of the targeted cells.
}
\description{
This function creates a new Seurat object by duplicating the count data and
metadata for cells that match both a specified condition and a set of
target cell types. This is useful for simulating a shift in cell type
composition or for over-sampling rare cell populations within a specific
biological condition.
}
\details{
The function only duplicates cells; it does not perform any normalization,
scaling, or dimensional reduction on the new object. New cell names are
generated by appending a suffix (e.g., "_1", "_2", ...) to the original
cell barcodes.
}
\examples{
\dontrun{
# ---------------------------------------------------------------------
# Example: Simulating differential cell abundance using the function
# ---------------------------------------------------------------------

# 1. Install and load necessary data (requires the SeuratData package)
# Note: SeuratData needs to be installed, but it is not a direct dependency
# of your current function, so it's placed in the example.
library(SeuratData)
# InstallData("pbmc3k") # Uncomment to install the dataset if necessary
data("pbmc3k")

# Ensure the object is updated to the latest Seurat standard
pbmc3k <- Seurat::UpdateSeuratObject(pbmc3k)
head(pbmc3k@meta.data)

# 2. Prepare the object: Create dummy 'sample_id' and 'condition_id' metadata
n_samples <- 40
n_groups <- 2

pbmc3k$sample_id <- ""
pbmc3k$sample_id <- rep(x = paste0("sample", seq(n_samples)), length.out = length(pbmc3k$sample_id))
pbmc3k$condition_id <- ""
pbmc3k$condition_id <- c(
  rep("condition1", n_samples / n_groups),
  rep("condition2", n_samples / n_groups)
)

# 3. Apply the function
# To multiply "CD8 T" cells AND "NK" cells ONLY within "condition2" by a factor of 5:
pbmc3k_DiffAbu <- seurat_multiply_cells_in_condition(
  seurat_object = pbmc3k,
  condition_column = "condition_id",
  target_condition = "condition2",
  celltype_column = "seurat_annotations", # Replace with your object's actual cell type column
  target_celltypes = c("CD8 T", "NK"),
  multiplier = 5
)

# 4. Verification (Optional):
# Check the cell counts before the multiplication (uses original 'condition' column)
table(pbmc3k@meta.data$condition, pbmc3k@meta.data$seurat_annotation)
# Check the cell counts after (uses the newly created 'condition_id' column)
table(pbmc3k_DiffAbu@meta.data$condition_id, pbmc3k_DiffAbu@meta.data$seurat_annotations)
}
}
