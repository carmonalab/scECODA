% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.r
\name{seurat_multiply_cells_in_condition}
\alias{seurat_multiply_cells_in_condition}
\title{Over-sample (Multiply/Duplicate) specific cells in a Seurat object.}
\usage{
seurat_multiply_cells_in_condition(
  seurat_object,
  condition_column,
  target_condition,
  celltype_column,
  target_celltypes,
  multiplier
)
}
\arguments{
\item{seurat_object}{The Seurat object to modify.}

\item{condition_column}{A character string specifying the name of the
metadata column that contains the primary condition (e.g., \code{"group"},
\code{"treatment"}).}

\item{target_condition}{A character string specifying the exact value within
\code{condition_column} that identifies the cells to be targeted for
duplication (e.g., \code{"disease"}, \code{"treated"}).}

\item{celltype_column}{A character string specifying the name of the
metadata column that contains the cell type annotation (e.g.,
\code{"seurat_clusters"}, \code{"cell_type_l2"}).}

\item{target_celltypes}{A character vector of specific cell type annotations
within \code{celltype_column} to be targeted (e.g., \code{c("CD8 T", "NK")}).}

\item{multiplier}{An integer specifying the factor by which to multiply
(duplicate) the selected cells. A value of \code{2} results in one copy
being added (doubling the count), a value of \code{3} results in two
copies, and so on. Must be \code{1} or greater. If \code{1}, the original
object is returned.}
}
\value{
A new \code{Seurat} object containing the original cells plus
(\code{multiplier} - 1) copies of the targeted cells.
}
\description{
This function creates a new Seurat object by duplicating the count data and
metadata for cells that match both a specified condition and a set of
target cell types. This is useful for simulating a shift in cell type
composition or for over-sampling rare cell populations within a specific
biological condition.
}
\details{
The function only duplicates cells; it does not perform any normalization,
scaling, or dimensional reduction on the new object. New cell names are
generated by appending a suffix (e.g., "_1", "_2", ...) to the original
cell barcodes.
}
