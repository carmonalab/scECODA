# This workflow is responsible for building R Markdown vignettes and deploying them
# to GitHub Pages using the 'docs/' directory as the source.

name: Build and Deploy Vignettes to Pages

# 1. Trigger the workflow when changes are pushed to the 'main' branch
#    or when a manual deployment is requested.
on:
  push:
    branches: [main]
  workflow_dispatch:

# Permissions are required to allow the action to deploy to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Define the environment where the deployment will occur
environment:
  name: github-pages
  url: ${{ steps.deployment.outputs.page_url }}

jobs:
  # The 'build' job handles the R environment setup and vignette knitting
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up the R environment
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3' # Use a recent, stable R version

      # Install R dependencies needed to knit the vignette
      - name: Install dependencies
        run: |
          install.packages(c("rmarkdown", "devtools", "BiocStyle"))
          # If your package has other dependencies, install them here too:
          # install.packages(c("scECODA", "..."))
        shell: Rscript {0}

      # 2. Render the specific R Markdown file.
      # The output_dir: ../docs/ in your Rmd YAML tells this command where to place the HTML.
      - name: Render Vignette to docs/
        run: Rscript -e 'rmarkdown::render("vignettes/Tutorial.Rmd")'

      # Prepare the content for the deployment action
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # This line tells the action to package the contents of the 'docs' folder
          # and upload it for GitHub Pages deployment.
          static_site_generator: 'docs'

      # Upload the artifact (your docs folder)
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs/' # The directory containing the built HTML

  # The 'deploy' job waits for the artifact to be uploaded and then publishes the site
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # This ensures the 'build' job completes successfully first
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
